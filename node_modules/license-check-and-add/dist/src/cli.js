#!/usr/bin/env node
"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs = __importStar(require("fs-extra"));
var path = __importStar(require("path"));
var yargs = __importStar(require("yargs"));
/* istanbul ignore file */
var modulePath = path.join(__dirname, '..');
if (path.basename(__dirname) === '.bin') {
    modulePath = path.join(__dirname, '../license-check-and-add');
}
var packageJSON = fs.readJSONSync(path.join(modulePath, '../package.json'));
var version = 'v' + packageJSON.version;
try {
    // tslint:disable-next-line: no-unused-expression
    yargs
        .commandDir(path.join(modulePath, 'src/cmds'), { exclude: /.*\.spec\.js/ })
        .demandCommand(1, 'Need to specify a command')
        .help()
        .wrap(null)
        .alias('v', 'version')
        .version(version)
        .describe('v', 'show version information')
        .env('LICENCE_CHECK')
        .argv;
    console.log('Command succeeded');
    process.exit(0);
}
catch (err) {
    console.error(err.message);
    console.error('Command failed');
    process.exit(1);
}
//# sourceMappingURL=cli.js.map
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var gitignore_to_glob_1 = __importDefault(require("gitignore-to-glob"));
var globby = __importStar(require("globby"));
var path = __importStar(require("path"));
exports.DEFAULT_IGNORES = [
    '**/node_modules', '**/dist',
    '**/LICENSE*', '**/*.png', '**/*.jpg', '**/*.jpeg', '**/*.gif', '**/*.tif', '**/*.ico', '**/*.json', '**/*.zip', '**/*.tgz',
];
function getPaths(ignore, ignoreDefaultIgnores) {
    var includes = ['**/*'];
    var ignores = [];
    if (!Array.isArray(ignore)) {
        console.debug('Using ignore file');
        includes = includes.concat(gitignore_to_glob_1.default(path.resolve(process.cwd(), ignore)));
    }
    else {
        ignores = ignore;
    }
    if (!ignoreDefaultIgnores) {
        ignores = ignores.concat(exports.DEFAULT_IGNORES);
    }
    return globby.sync(includes, {
        dot: true,
        expandDirectories: true,
        ignore: ignores,
    });
}
exports.getPaths = getPaths;
//# sourceMappingURL=file-finder.js.map